@model IEnumerable<SMG_Model.DailyOrderModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Order List Page";
}


<head>
    <link href="~/Css/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/Gridmvc.css" rel="stylesheet" />
    <script src="~/Scripts/gridmvc.min.js"></script>
    <style>
        .title {
            padding-top: 10px;
            font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
            font-weight: 600;
            font-size: 30px;
            color: #32a836;
        }

        fieldset {
            border: 1px solid #ddd !important;
            margin: 0;
            min-width: 0;
            padding: 10px;
            position: relative;
            border-radius: 4px;
            background-color: #f5f5f5;
            padding-left: 10px !important;
        }

        h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 5px;
            width: 20%;
            color: #32a836;
        }
    </style>
</head>
<br />
<div>
    <h2>Retail Payments Details :</h2>
</div>
<fieldset>
    <div class="container">

        <div class="code-cut">
            @Html.Grid(Model).Columns(columns =>
       {
           columns.Add(c => c.CustomerName).Titled("Customer Name").Filterable(true);
           columns.Add(c => c.OrderNumber).Titled("Order Number").Filterable(true);
           columns.Add(c => c.OrderDate).Titled("Order Date").Filterable(true);
           columns.Add(c => c.PaymentType).Titled("Payment Type").Filterable(true);
           columns.Add(c => c.FinalTotal).Titled("Total Price").Filterable(true);
           columns.Add()
                      .Encoded(false)
                      .Sanitized(false)
                      .RenderValueAs(o => Html.ActionLink("View Order", "RetailOrderDetails", new { id = o.OrderNumber }));

       }).WithPaging(10).Sortable(true)

        </div>

    </div>
</fieldset>



